{"version":3,"file":"static/js/372.088ad955.chunk.js","mappings":"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","sources":["components/VerticalVideo/VerticalVideo.js","webpack://youtube-clone/./src/components/VerticalVideo/VerticalVideo.module.scss?fc09","services/channelService.js"],"sourcesContent":["import Tippy from '@tippyjs/react/headless';\r\nimport classNames from 'classnames/bind';\r\nimport PropTyes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { DownloadIcon, LiveIcon } from '~/components/Icons/Icons';\r\nimport * as videoService from '~/services/videoService';\r\nimport * as channelService from '~/services/channelService';\r\nimport CircleButton from '../CircleButton';\r\nimport { AddQueueIcon, OptionIcon, ShareIcon, TickIcon } from '../Icons/Icons';\r\nimport Menu from '../Menu';\r\nimport Wrapper from '../Popper/Wrapper';\r\nimport styles from './VerticalVideo.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst VerticalVideo = ({ data }) => {\r\n    const [video, setVideo] = useState();\r\n    const [channel, setChannel] = useState();\r\n\r\n    const MENU_DATA = [\r\n        {\r\n            icon: <AddQueueIcon width=\"2.4rem\" height=\"2.4rem\" />,\r\n            label: 'Add to queue',\r\n            separate: false,\r\n            chevron: false,\r\n        },\r\n        {\r\n            icon: <DownloadIcon width=\"2.4rem\" height=\"2.4rem\" />,\r\n            label: 'Download',\r\n            separate: false,\r\n            chevron: false,\r\n        },\r\n        {\r\n            icon: <ShareIcon width=\"2.4rem\" height=\"2.4rem\" />,\r\n            label: 'Share',\r\n            separate: false,\r\n            chevron: false,\r\n        },\r\n    ];\r\n\r\n    const handleRenderMenu = () => {\r\n        return (\r\n            <Wrapper>\r\n                <Menu data={MENU_DATA} small />\r\n            </Wrapper>\r\n        );\r\n    };\r\n\r\n    // Get channel\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await channelService.get(data.channelId);\r\n            setChannel(res);\r\n        })();\r\n    }, [data.channelId]);\r\n\r\n    // Get video\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await videoService.get(data.videoId);\r\n            setVideo(res);\r\n        })();\r\n    }, [data.videoId]);\r\n\r\n    return (\r\n        <>\r\n            {video && channel && (\r\n                <div className={cx('wrapper')}>\r\n                    <div className={cx('main')}>\r\n                        <Link to={`/youtube-clone/watch/${data.videoId}`} className={cx('head')}>\r\n                            <img src={data.thumbnail} className={cx('thumbnail')} alt={data.title} />\r\n                            {video.convertDuration !== '0:00' && (\r\n                                <span className={cx('duration')}>{video.convertDuration}</span>\r\n                            )}\r\n                            <span className={cx('keep-hover')}>Keep hovering to play</span>\r\n                        </Link>\r\n\r\n                        <div className={cx('body')}>\r\n                            <Link to={`/youtube-clone/channel/${data.channelId}`}>\r\n                                <img src={channel.thumbnail} className={cx('channel-thumb')} alt={channel.title} />\r\n                            </Link>\r\n\r\n                            <Link to={`/youtube-clone/watch/${data.videoId}`} className={cx('info')}>\r\n                                <h3 className={cx('title')} title={data.title}>\r\n                                    {data.title}\r\n                                </h3>\r\n\r\n                                <div className={cx('channel-name')}>\r\n                                    {channel.title}\r\n                                    {channel.tick && (\r\n                                        <span className={cx('tick')}>\r\n                                            <TickIcon width=\"1.2rem\" height=\"1.2rem\" />\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className={cx('config')}>\r\n                                    <span className={cx('view')}>{video.views} views</span>\r\n                                    <span className={cx('separate')}>.</span>\r\n                                    <span className={cx('publish-at')}>{data.publishSince}</span>\r\n                                </div>\r\n\r\n                                {video.convertDuration === '0:00' && (\r\n                                    <span className={cx('live')}>\r\n                                        <span className={cx('live-icon')}>\r\n                                            <LiveIcon width=\"1.6rem\" height=\"1.6rem\" />\r\n                                        </span>\r\n                                        <span className={cx('live-text')}>LIVE</span>\r\n                                    </span>\r\n                                )}\r\n                            </Link>\r\n\r\n                            <Tippy\r\n                                placement=\"bottom-start\"\r\n                                trigger=\"click\"\r\n                                interactive\r\n                                render={handleRenderMenu}\r\n                                offset={[8, 12]}\r\n                            >\r\n                                <span className={cx('options')}>\r\n                                    <CircleButton icon={<OptionIcon width=\"2.3rem\" />} />\r\n                                </span>\r\n                            </Tippy>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nVerticalVideo.propTypes = {\r\n    data: PropTyes.object.isRequired,\r\n};\r\n\r\nexport default VerticalVideo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"VerticalVideo_wrapper__cjBLv\",\"main\":\"VerticalVideo_main__pVLPI\",\"options\":\"VerticalVideo_options__gXdab\",\"head\":\"VerticalVideo_head__q7yY7\",\"keep-hover\":\"VerticalVideo_keep-hover__+h98I\",\"thumbnail\":\"VerticalVideo_thumbnail__qqUY1\",\"duration\":\"VerticalVideo_duration__QL9Z9\",\"body\":\"VerticalVideo_body__ZO4FJ\",\"channel-thumb\":\"VerticalVideo_channel-thumb__Kwix-\",\"info\":\"VerticalVideo_info__a7T9L\",\"title\":\"VerticalVideo_title__Ii5Kt\",\"tick\":\"VerticalVideo_tick__IaiZ3\",\"channel-name\":\"VerticalVideo_channel-name__gx5Bt\",\"config\":\"VerticalVideo_config__-vW2m\",\"view\":\"VerticalVideo_view__HHSCl\",\"separate\":\"VerticalVideo_separate__xTjjJ\",\"publish-at\":\"VerticalVideo_publish-at__e9owf\",\"live\":\"VerticalVideo_live__2wHMk\",\"live-icon\":\"VerticalVideo_live-icon__RjfTV\",\"live-text\":\"VerticalVideo_live-text__VMF53\"};","import axios from 'axios';\r\n\r\nexport const get = async (channelId) => {\r\n    const res = await axios({\r\n        method: 'GET',\r\n        url: 'https://www.googleapis.com/youtube/v3/channels',\r\n        params: {\r\n            part: 'snippet,statistics,brandingSettings',\r\n            maxResults: 1,\r\n            id: channelId,\r\n            key: 'AIzaSyA7VA0F-Cub1vsxig1eHAwZCL2kuEpJ-og',\r\n            // key: 'AIzaSyCMylU-9JSqd2vovIC5HRbm_AZyx710WbQ',\r\n            // key: 'AIzaSyCkE39Mg6XPAFYprzto4wo7rjNL9Jxsr5w',\r\n            // key: 'AIzaSyAWwuKzvNwpe3QEN2nHu2MrTLIQvZqvRkc',\r\n            // key: 'AIzaSyB-kSJpQ3NugeVslBfmdRq5kJySv4ykPSM',\r\n        },\r\n    });\r\n\r\n    const data = res.data.items[0];\r\n    const snippet = data.snippet;\r\n    const statistics = data.statistics;\r\n    const brandingSettings = data.brandingSettings;\r\n    // const contentDetails = data.contentDetails;\r\n\r\n    const result = {};\r\n\r\n    result.thumbnail = snippet.thumbnails.default.url;\r\n    result.title = snippet.title;\r\n    result.customUrl = snippet.customUrl;\r\n\r\n    result.hiddenSubscriberCount = statistics.hiddenSubscriberCount;\r\n    result.subscriberCount = statistics.subscriberCount;\r\n    result.videoCount = statistics.videoCount;\r\n    result.viewCount = statistics.viewCount;\r\n\r\n    result.tick = statistics.subscriberCount > 100000 ? true : false;\r\n\r\n    result.coverImage = brandingSettings.image.bannerExternalUrl;\r\n\r\n    // result.channels = contentDetails.channels;\r\n\r\n    return result;\r\n};\r\n"],"names":["cx","classNames","data","useState","video","setVideo","channel","setChannel","MENU_DATA","icon","width","height","label","separate","chevron","useEffect","channelService","channelId","res","videoService","videoId","className","to","src","thumbnail","alt","title","convertDuration","tick","views","publishSince","placement","trigger","interactive","render","Wrapper","Menu","small","offset","CircleButton","get","axios","method","url","params","part","maxResults","id","key","items","snippet","statistics","brandingSettings","result","thumbnails","default","customUrl","hiddenSubscriberCount","subscriberCount","videoCount","viewCount","coverImage","image","bannerExternalUrl"],"sourceRoot":""}
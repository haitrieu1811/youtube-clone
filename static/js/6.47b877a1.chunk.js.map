{"version":3,"file":"static/js/6.47b877a1.chunk.js","mappings":"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","sources":["components/HorizontalVideo/HorizontalVideo.js","webpack://youtube-clone/./src/components/HorizontalVideo/HorizontalVideo.module.scss?ebf3","services/channelService.js"],"sourcesContent":["import Tippy from '@tippyjs/react/headless';\r\nimport classNames from 'classnames/bind';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as videoService from '~/services/videoService';\r\nimport * as channelService from '~/services/channelService';\r\nimport CircleButton from '../CircleButton';\r\nimport { AddQueueIcon, OptionIcon, TickIcon, WatchLaterIcon, LiveIcon } from '../Icons/Icons';\r\nimport Menu from '../Menu';\r\nimport Wrapper from '../Popper/Wrapper';\r\nimport styles from './HorizontalVideo.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst HorizontalVideo = ({ data }) => {\r\n    const [channel, setChannel] = useState();\r\n    const [video, setVideo] = useState();\r\n\r\n    const MENU_DATA = [\r\n        {\r\n            icon: <AddQueueIcon width=\"2.4rem\" />,\r\n            label: 'Add to queue',\r\n        },\r\n    ];\r\n\r\n    const handleRenderOptions = () => {\r\n        return (\r\n            <Wrapper>\r\n                <Menu data={MENU_DATA} small />\r\n            </Wrapper>\r\n        );\r\n    };\r\n\r\n    // Get channel\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await channelService.get(data.channelId);\r\n            setChannel(res);\r\n        })();\r\n    }, [data.channelId]);\r\n\r\n    // Get video\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await videoService.get(data.videoId);\r\n            setVideo(res);\r\n        })();\r\n    }, [data.videoId]);\r\n\r\n    return (\r\n        <>\r\n            {data && channel && video && (\r\n                <div className={cx('wrapper')}>\r\n                    <Link to={`/youtube-clone/watch/${data.videoId}`} className={cx('thumbnail-wp')}>\r\n                        <div className={cx('actions')}>\r\n                            <div className={cx('action')}>\r\n                                <WatchLaterIcon width=\"2.4rem\" height=\"2.4rem\" />\r\n                            </div>\r\n                            <div className={cx('action')}>\r\n                                <AddQueueIcon width=\"2.4rem\" height=\"2.4rem\" />\r\n                            </div>\r\n                        </div>\r\n                        <img className={cx('thumbnail')} src={data.thumbnail} alt={data.title} />\r\n                        {video.convertDuration !== '0:00' && (\r\n                            <span className={cx('duration')}>{video.convertDuration}</span>\r\n                        )}\r\n                    </Link>\r\n\r\n                    <Link to={`/youtube-clone/watch/${data.videoId}`} className={cx('info')}>\r\n                        <h3 className={cx('title')}>{data.title}</h3>\r\n                        <div className={cx('config')}>\r\n                            <div className={cx('config-value')}>{video.views} lượt xem</div>\r\n                            <div className={cx('config-separate')}></div>\r\n                            <div className={cx('config-value')}>{data.publishSince}</div>\r\n                        </div>\r\n                        <Link to={`/youtube-clone/channel/${data.channelId}`} className={cx('channel')}>\r\n                            <img className={cx('channel-thumbnail')} src={channel.thumbnail} alt={channel.title} />\r\n                            <span className={cx('channel-name')}>{channel.title}</span>\r\n                            {channel.tick && (\r\n                                <span className={cx('channel-tick')}>\r\n                                    <TickIcon width=\"1.4rem\" height=\"1.4rem\" />\r\n                                </span>\r\n                            )}\r\n                        </Link>\r\n                        <div className={cx('description')}>{data.description}</div>\r\n                        {video.convertDuration === '0:00' && (\r\n                            <span className={cx('live')}>\r\n                                <span className={cx('live-icon')}>\r\n                                    <LiveIcon width=\"1.8rem\" height=\"1.8rem\" />\r\n                                </span>\r\n                                <span className={cx('live-text')}>LIVE</span>\r\n                            </span>\r\n                        )}\r\n                    </Link>\r\n\r\n                    <Tippy interactive placement=\"bottom-end\" trigger=\"click\" render={handleRenderOptions}>\r\n                        <span className={cx('options')}>\r\n                            <CircleButton icon={<OptionIcon width=\"2.4rem\" height=\"2.4rem\" />} />\r\n                        </span>\r\n                    </Tippy>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nHorizontalVideo.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default HorizontalVideo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"HorizontalVideo_wrapper__t2Izn\",\"actions\":\"HorizontalVideo_actions__tLRTO\",\"thumbnail-wp\":\"HorizontalVideo_thumbnail-wp__W6XDE\",\"action\":\"HorizontalVideo_action__muI2M\",\"thumbnail\":\"HorizontalVideo_thumbnail__y3MhW\",\"duration\":\"HorizontalVideo_duration__fev+f\",\"info\":\"HorizontalVideo_info__USIj+\",\"title\":\"HorizontalVideo_title__BhGK6\",\"config\":\"HorizontalVideo_config__QyXqJ\",\"config-value\":\"HorizontalVideo_config-value__Y-m+4\",\"config-separate\":\"HorizontalVideo_config-separate__8G4Cf\",\"channel\":\"HorizontalVideo_channel__kGVO0\",\"channel-thumbnail\":\"HorizontalVideo_channel-thumbnail__RQVbe\",\"channel-name\":\"HorizontalVideo_channel-name__Na9gK\",\"channel-tick\":\"HorizontalVideo_channel-tick__2JmYL\",\"options\":\"HorizontalVideo_options__osGjd\",\"description\":\"HorizontalVideo_description__Zdu3n\",\"live\":\"HorizontalVideo_live__x55iW\",\"live-icon\":\"HorizontalVideo_live-icon__Evg58\",\"live-text\":\"HorizontalVideo_live-text__WJcMu\"};","import axios from 'axios';\r\n\r\nexport const get = async (channelId) => {\r\n    const res = await axios({\r\n        method: 'GET',\r\n        url: 'https://www.googleapis.com/youtube/v3/channels',\r\n        params: {\r\n            part: 'snippet,statistics,brandingSettings',\r\n            maxResults: 1,\r\n            id: channelId,\r\n            key: 'AIzaSyA7VA0F-Cub1vsxig1eHAwZCL2kuEpJ-og',\r\n            // key: 'AIzaSyCMylU-9JSqd2vovIC5HRbm_AZyx710WbQ',\r\n            // key: 'AIzaSyCkE39Mg6XPAFYprzto4wo7rjNL9Jxsr5w',\r\n            // key: 'AIzaSyAWwuKzvNwpe3QEN2nHu2MrTLIQvZqvRkc',\r\n            // key: 'AIzaSyB-kSJpQ3NugeVslBfmdRq5kJySv4ykPSM',\r\n        },\r\n    });\r\n\r\n    const data = res.data.items[0];\r\n    const snippet = data.snippet;\r\n    const statistics = data.statistics;\r\n    const brandingSettings = data.brandingSettings;\r\n    // const contentDetails = data.contentDetails;\r\n\r\n    const result = {};\r\n\r\n    result.thumbnail = snippet.thumbnails.default.url;\r\n    result.title = snippet.title;\r\n    result.customUrl = snippet.customUrl;\r\n\r\n    result.hiddenSubscriberCount = statistics.hiddenSubscriberCount;\r\n    result.subscriberCount = statistics.subscriberCount;\r\n    result.videoCount = statistics.videoCount;\r\n    result.viewCount = statistics.viewCount;\r\n\r\n    result.tick = statistics.subscriberCount > 100000 ? true : false;\r\n\r\n    result.coverImage = brandingSettings.image.bannerExternalUrl;\r\n\r\n    // result.channels = contentDetails.channels;\r\n\r\n    return result;\r\n};\r\n"],"names":["cx","classNames","data","useState","channel","setChannel","video","setVideo","MENU_DATA","icon","width","label","useEffect","channelService","channelId","res","videoService","videoId","className","to","height","src","thumbnail","alt","title","convertDuration","views","publishSince","tick","description","interactive","placement","trigger","render","Wrapper","Menu","small","CircleButton","get","axios","method","url","params","part","maxResults","id","key","items","snippet","statistics","brandingSettings","result","thumbnails","default","customUrl","hiddenSubscriberCount","subscriberCount","videoCount","viewCount","coverImage","image","bannerExternalUrl"],"sourceRoot":""}
{"version":3,"file":"static/js/975.73ef269d.chunk.js","mappings":"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","sources":["components/HorizontalVideoSkeleton/HorizontalVideoSkeleton.js","webpack://youtube-clone/./src/components/HorizontalVideoSkeleton/HorizontalVideoSkeleton.module.scss?785b","pages/Search/Search.js","webpack://youtube-clone/./src/pages/Search/Search.module.scss?53c1","utils/convertDuration.js","services/videoService.js","utils/intToString.js","utils/timeSince.js"],"sourcesContent":["import classNames from 'classnames/bind';\r\n\r\nimport styles from './HorizontalVideoSkeleton.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst HorizontalVideo = () => {\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <div className={cx('thumbnail-wp')}></div>\r\n            <div className={cx('info')}>\r\n                <h3 className={cx('title')}></h3>\r\n                <div className={cx('config')}></div>\r\n                <div className={cx('channel')}></div>\r\n                <div className={cx('description')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HorizontalVideo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"HorizontalVideoSkeleton_wrapper__+9rOJ\",\"thumbnail-wp\":\"HorizontalVideoSkeleton_thumbnail-wp__CbOBs\",\"info\":\"HorizontalVideoSkeleton_info__w2DlW\",\"title\":\"HorizontalVideoSkeleton_title__KskM5\",\"config\":\"HorizontalVideoSkeleton_config__xY1KH\",\"channel\":\"HorizontalVideoSkeleton_channel__4qmsm\",\"description\":\"HorizontalVideoSkeleton_description__XYpzz\"};","import classNames from 'classnames/bind';\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport HorizontalVideoSkeleton from '~/components/HorizontalVideoSkeleton';\r\n\r\nimport * as videoService from '~/services/videoService';\r\nimport styles from './Search.module.scss';\r\n\r\nconst Video = React.lazy(() => import('~/components/HorizontalVideo'));\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Search = () => {\r\n    const { q } = useParams();\r\n\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await videoService.list(q, 24);\r\n            setVideos(res);\r\n        })();\r\n    }, [q]);\r\n\r\n    return (\r\n        <>\r\n            <div className={cx('wrapper')}>\r\n                {videos.map((video, index) => (\r\n                    <Suspense key={index} fallback={<HorizontalVideoSkeleton />}>\r\n                        <Video data={video} />\r\n                    </Suspense>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Search_wrapper__ktzGN\"};","import moment from 'moment';\r\n\r\nconst padWithLeadingZeros = (num, totalLength) => {\r\n    return String(num).padStart(totalLength, '0');\r\n};\r\n\r\nconst convertDuration = (yt_duration) => {\r\n    const initMinutes = moment.duration(yt_duration).asMinutes();\r\n\r\n    const minutes = Math.floor(initMinutes);\r\n    const seconds = Math.floor((initMinutes % 1) * 60);\r\n\r\n    return minutes + ':' + padWithLeadingZeros(seconds, 2);\r\n};\r\n\r\nexport default convertDuration;\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport intToString from '~/utils/intToString';\r\nimport timeSince from '~/utils/timeSince';\r\nimport convertDuration from '~/utils/convertDuration';\r\n\r\nexport const list = async (q, maxResults) => {\r\n    const res = await axios({\r\n        method: 'GET',\r\n        url: 'https://www.googleapis.com/youtube/v3/search',\r\n        params: {\r\n            part: 'snippet',\r\n            maxResults: maxResults,\r\n            q: q,\r\n            type: 'video',\r\n            key: 'AIzaSyA7VA0F-Cub1vsxig1eHAwZCL2kuEpJ-og',\r\n            // key: 'AIzaSyCMylU-9JSqd2vovIC5HRbm_AZyx710WbQ',\r\n            // key: 'AIzaSyCkE39Mg6XPAFYprzto4wo7rjNL9Jxsr5w',\r\n            // key: 'AIzaSyAWwuKzvNwpe3QEN2nHu2MrTLIQvZqvRkc',\r\n            // key: 'AIzaSyB-kSJpQ3NugeVslBfmdRq5kJySv4ykPSM',\r\n        },\r\n    });\r\n\r\n    const data = res.data.items;\r\n\r\n    console.log('>>> Check data: ', data);\r\n\r\n    const dataVideos = data.map((item) => {\r\n        const obj = {};\r\n\r\n        obj.videoId = item.id.videoId;\r\n        obj.thumbnail = item.snippet.thumbnails.high.url;\r\n        obj.title = item.snippet.title;\r\n        obj.channelName = item.snippet.channelTitle;\r\n        obj.channelId = item.snippet.channelId;\r\n        obj.description = item.snippet.description;\r\n        obj.publishAt = moment(item.snippet.publishedAt).format('MM/DD/YYYY');\r\n        obj.publishSince = timeSince(new Date(obj.publishAt)) + ' ago';\r\n        obj.publishTime = moment(item.snippet.publishedAt).format('MMMM Do YYYY');\r\n\r\n        return obj;\r\n    });\r\n\r\n    console.log('>>> Data Videos: ', dataVideos);\r\n\r\n    return dataVideos;\r\n};\r\n\r\nexport const get = async (videoId) => {\r\n    const res = await axios({\r\n        method: 'GET',\r\n        url: 'https://www.googleapis.com/youtube/v3/videos',\r\n        params: {\r\n            part: 'snippet,statistics,contentDetails',\r\n            id: videoId,\r\n            key: 'AIzaSyA7VA0F-Cub1vsxig1eHAwZCL2kuEpJ-og',\r\n            // key: 'AIzaSyCMylU-9JSqd2vovIC5HRbm_AZyx710WbQ',\r\n            // key: 'AIzaSyCkE39Mg6XPAFYprzto4wo7rjNL9Jxsr5w',\r\n            // key: 'AIzaSyAWwuKzvNwpe3QEN2nHu2MrTLIQvZqvRkc',\r\n            // key: 'AIzaSyB-kSJpQ3NugeVslBfmdRq5kJySv4ykPSM',\r\n        },\r\n    });\r\n\r\n    const data = res.data.items[0];\r\n\r\n    console.log('>>> Check data video: ', data);\r\n\r\n    const snippet = data.snippet;\r\n    const statistics = data.statistics;\r\n    const contentDetails = data.contentDetails;\r\n\r\n    const result = {};\r\n\r\n    result.title = snippet.title;\r\n    result.description = snippet.description;\r\n    result.channelId = snippet.channelId;\r\n    result.channelTitle = snippet.channelTitle;\r\n    result.publishAt = moment(snippet.publishedAt).format('MM/DD/YYYY');\r\n    result.publishSince = timeSince(new Date(result.publishAt)) + ' ago';\r\n    result.tags = snippet.tags;\r\n\r\n    result.views = intToString(statistics.viewCount);\r\n    result.exactlyViews = statistics.viewCount;\r\n    result.likes = intToString(statistics.likeCount);\r\n    result.comments = intToString(statistics.commentCount);\r\n    result.exactlyComments = statistics.commentCount;\r\n    result.favorites = intToString(statistics.favoriteCount);\r\n\r\n    result.duration = contentDetails.duration;\r\n    result.convertDuration = convertDuration(contentDetails.duration);\r\n    result.dimension = contentDetails.dimension;\r\n    result.definition = contentDetails.definition;\r\n    result.caption = contentDetails.caption;\r\n\r\n    console.log('>>> Data video: ', result);\r\n\r\n    return result;\r\n};\r\n","const ranges = [\r\n    {\r\n        divider: 1e3,\r\n        suffix: 'K',\r\n    },\r\n    {\r\n        divider: 1e6,\r\n        suffix: 'M',\r\n    },\r\n    {\r\n        divider: 1e9,\r\n        suffix: 'B',\r\n    },\r\n];\r\n\r\nfunction intToString(input) {\r\n    for (let index = ranges.length - 1; index >= 0; index--) {\r\n        if (input > ranges[index].divider) {\r\n            let quotient = input / ranges[index].divider;\r\n\r\n            if (quotient < 10) {\r\n                quotient = Math.floor(quotient * 10) / 10;\r\n            } else {\r\n                quotient = Math.floor(quotient);\r\n            }\r\n\r\n            return quotient.toString() + ranges[index].suffix;\r\n        }\r\n    }\r\n\r\n    return input.toString();\r\n}\r\n\r\nexport default intToString;\r\n","const timeSince = (date) => {\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n    var interval = seconds / 31536000;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' years';\r\n    }\r\n\r\n    interval = seconds / 2592000;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' months';\r\n    }\r\n\r\n    interval = seconds / 604800;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' weeks';\r\n    }\r\n\r\n    interval = seconds / 86400;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' days';\r\n    }\r\n\r\n    interval = seconds / 3600;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' hours';\r\n    }\r\n\r\n    interval = seconds / 60;\r\n    if (interval > 1) {\r\n        return Math.floor(interval) + ' minutes';\r\n    }\r\n\r\n    return Math.floor(seconds) + ' seconds';\r\n};\r\n\r\nexport default timeSince;\r\n"],"names":["cx","classNames","className","Video","React","q","useParams","useState","videos","setVideos","useEffect","videoService","res","map","video","index","Suspense","fallback","HorizontalVideoSkeleton","data","yt_duration","totalLength","initMinutes","moment","asMinutes","minutes","Math","floor","seconds","String","padStart","list","maxResults","axios","method","url","params","part","type","key","items","console","log","dataVideos","item","obj","videoId","id","thumbnail","snippet","thumbnails","high","title","channelName","channelTitle","channelId","description","publishAt","publishedAt","format","publishSince","timeSince","Date","publishTime","get","statistics","contentDetails","result","tags","views","intToString","viewCount","exactlyViews","likes","likeCount","comments","commentCount","exactlyComments","favorites","favoriteCount","duration","convertDuration","dimension","definition","caption","ranges","divider","suffix","input","length","quotient","toString","date","interval"],"sourceRoot":""}